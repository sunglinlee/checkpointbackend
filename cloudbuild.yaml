steps:
  # 步驟 1: 使用 Dockerfile 建置容器映像檔
  # $PROJECT_ID: Cloud Build 會自動代入您的專案 ID
  # $COMMIT_SHA: Cloud Build 會自動代入這次提交的 Git SHA 值，用來當作映像檔的唯一標籤
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA'
      - '.'

  # 步驟 2: 將建置好的映像檔推送到 Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA'

  # 步驟 3: 將這個新映像檔部署到 Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}' # 您要部署的 Cloud Run 服務名稱
      - '--image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA'
      - '--region'
      - '${_REGION}' # 您希望部署在哪個地區
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated' # 允許未經授權的公開存取，如果您的 API 需要登入，請移除此行

# 這個設定讓部署步驟可以存取到建置好的映像檔
images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA'


# 定義替代變數
substitutions:
  _SERVICE_NAME: checkpoint-backend  # 替換成您的 Cloud Run 服務名稱
  _REGION: asia-east1                    # 替換成您的部署地區
  _REPOSITORY: checkpoint2cicd   # 替換成您的 Artifact Registry 存放區名稱
  _IMAGE_NAME: checkpoint-be  # 替換成您想要的映像檔名稱